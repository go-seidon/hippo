// Code generated by MockGen. DO NOT EDIT.
// Source: internal/auth/basic.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	auth "github.com/go-seidon/local/internal/auth"
	gomock "github.com/golang/mock/gomock"
)

// MockBasicAuth is a mock of BasicAuth interface.
type MockBasicAuth struct {
	ctrl     *gomock.Controller
	recorder *MockBasicAuthMockRecorder
}

// MockBasicAuthMockRecorder is the mock recorder for MockBasicAuth.
type MockBasicAuthMockRecorder struct {
	mock *MockBasicAuth
}

// NewMockBasicAuth creates a new mock instance.
func NewMockBasicAuth(ctrl *gomock.Controller) *MockBasicAuth {
	mock := &MockBasicAuth{ctrl: ctrl}
	mock.recorder = &MockBasicAuthMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBasicAuth) EXPECT() *MockBasicAuthMockRecorder {
	return m.recorder
}

// CheckCredential mocks base method.
func (m *MockBasicAuth) CheckCredential(ctx context.Context, p auth.CheckCredentialParam) (*auth.CheckCredentialResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckCredential", ctx, p)
	ret0, _ := ret[0].(*auth.CheckCredentialResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckCredential indicates an expected call of CheckCredential.
func (mr *MockBasicAuthMockRecorder) CheckCredential(ctx, p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckCredential", reflect.TypeOf((*MockBasicAuth)(nil).CheckCredential), ctx, p)
}

// ParseAuthToken mocks base method.
func (m *MockBasicAuth) ParseAuthToken(ctx context.Context, p auth.ParseAuthTokenParam) (*auth.ParseAuthTokenResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseAuthToken", ctx, p)
	ret0, _ := ret[0].(*auth.ParseAuthTokenResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ParseAuthToken indicates an expected call of ParseAuthToken.
func (mr *MockBasicAuthMockRecorder) ParseAuthToken(ctx, p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseAuthToken", reflect.TypeOf((*MockBasicAuth)(nil).ParseAuthToken), ctx, p)
}
