// Code generated by MockGen. DO NOT EDIT.
// Source: internal/uploading/location.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUploadLocation is a mock of UploadLocation interface.
type MockUploadLocation struct {
	ctrl     *gomock.Controller
	recorder *MockUploadLocationMockRecorder
}

// MockUploadLocationMockRecorder is the mock recorder for MockUploadLocation.
type MockUploadLocationMockRecorder struct {
	mock *MockUploadLocation
}

// NewMockUploadLocation creates a new mock instance.
func NewMockUploadLocation(ctrl *gomock.Controller) *MockUploadLocation {
	mock := &MockUploadLocation{ctrl: ctrl}
	mock.recorder = &MockUploadLocationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUploadLocation) EXPECT() *MockUploadLocationMockRecorder {
	return m.recorder
}

// GetLocation mocks base method.
func (m *MockUploadLocation) GetLocation() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLocation")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetLocation indicates an expected call of GetLocation.
func (mr *MockUploadLocationMockRecorder) GetLocation() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLocation", reflect.TypeOf((*MockUploadLocation)(nil).GetLocation))
}
