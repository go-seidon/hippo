// Code generated by MockGen. DO NOT EDIT.
// Source: internal/retrieving/retriever.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	retrieving "github.com/go-seidon/local/internal/retrieving"
	gomock "github.com/golang/mock/gomock"
)

// MockRetriever is a mock of Retriever interface.
type MockRetriever struct {
	ctrl     *gomock.Controller
	recorder *MockRetrieverMockRecorder
}

// MockRetrieverMockRecorder is the mock recorder for MockRetriever.
type MockRetrieverMockRecorder struct {
	mock *MockRetriever
}

// NewMockRetriever creates a new mock instance.
func NewMockRetriever(ctrl *gomock.Controller) *MockRetriever {
	mock := &MockRetriever{ctrl: ctrl}
	mock.recorder = &MockRetrieverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRetriever) EXPECT() *MockRetrieverMockRecorder {
	return m.recorder
}

// RetrieveFile mocks base method.
func (m *MockRetriever) RetrieveFile(ctx context.Context, p retrieving.RetrieveFileParam) (*retrieving.RetrieveFileResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveFile", ctx, p)
	ret0, _ := ret[0].(*retrieving.RetrieveFileResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveFile indicates an expected call of RetrieveFile.
func (mr *MockRetrieverMockRecorder) RetrieveFile(ctx, p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveFile", reflect.TypeOf((*MockRetriever)(nil).RetrieveFile), ctx, p)
}
