name: Code Quality Check
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test: 
    name: Code Test
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mariadb:10.4
        ports:
          - 3307:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        env:
          MYSQL_USER: admin
          MYSQL_PASSWORD: 123456
          MYSQL_DATABASE: goseidon_local_test
          MYSQL_ROOT_PASSWORD: toor
      mongo:
        image: mongo:4.4
        ports:
          - 27020:27017
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: toor
          MONGO_INITDB_USERNAME: admin
          MONGO_INITDB_PASSWORD: 123456
          MONGO_INITDB_DATABASE: goseidon_local_test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup golang
        uses: actions/setup-go@v2
        with:
          go-version: '^1.16'
      - name: Install golang migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate.linux-amd64 /usr/bin/migrate
          which migrate
      - name: Run MySQL migration
        run: migrate -database 'mysql://admin:123456@tcp(localhost:3307)/goseidon_local_test?x-tls-insecure-skip-verify=true' -path ./migration/mysql up
      - name: Prepare Mongo
        run: |
          mongo --username root --password toor --host localhost/admin --port 27020 --eval "db.auth('$MONGO_INITDB_ROOT_USERNAME', '$MONGO_INITDB_ROOT_PASSWORD'); db = db.getSiblingDB('$MONGO_INITDB_DATABASE'); db.createUser({ user: '$MONGO_INITDB_USERNAME', pwd: '$MONGO_INITDB_PASSWORD', roles: [{ role: 'readWrite', db: '$MONGO_INITDB_DATABASE' }] });"
      - name: Run Mongo migration
        run: migrate -database 'mongodb://admin:123456@localhost:27020/goseidon_local_test' -path ./migration/mongo up
      - name: Run test
        run: make test
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}